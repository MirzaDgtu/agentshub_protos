syntax = "proto3";

package order.v1;

option go_package = "github.com/MirzaDgtu/agentshub_proto/gen/go/order/v1;orderv1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// OrderService предоставляет методы для работы с заказами
service OrderService {
    // Order management
    rpc CreateOrder(CreateOrderRequest) returns (OrderResponse) {}
    rpc GetOrder(GetOrderRequest) returns (OrderResponse) {}
    rpc UpdateOrder(UpdateOrderRequest) returns (OrderResponse) {}
    rpc DeleteOrder(DeleteOrderRequest) returns (google.protobuf.Empty) {}
    rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse) {}
    
    // Order items
    rpc AddOrderItem(AddOrderItemRequest) returns (OrderItemResponse) {}
    rpc UpdateOrderItem(UpdateOrderItemRequest) returns (OrderItemResponse) {}
    rpc DeleteOrderItem(DeleteOrderItemRequest) returns (google.protobuf.Empty) {}
    
    // Order status
    rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (OrderResponse) {}
    
    // Order analytics
    rpc GetOrderStats(GetOrderStatsRequest) returns (OrderStatsResponse) {}
    rpc GetSalesReport(GetSalesReportRequest) returns (SalesReportResponse) {}
}

message Order {
    int64 id = 1;
    int64 client_id = 2;
    int64 store_id = 3;
    int64 user_id = 4;  // ID торгового представителя
    OrderStatus status = 5;
    repeated OrderItem items = 6;
    double total_amount = 7;
    double discount_amount = 8;
    double final_amount = 9;
    string comment = 10;
    google.protobuf.Timestamp order_date = 11;
    google.protobuf.Timestamp delivery_date = 12;
    google.protobuf.Timestamp created_at = 13;
    google.protobuf.Timestamp updated_at = 14;
}

enum OrderStatus {
    ORDER_STATUS_UNSPECIFIED = 0;
    ORDER_STATUS_DRAFT = 1;
    ORDER_STATUS_PENDING = 2;
    ORDER_STATUS_CONFIRMED = 3;
    ORDER_STATUS_PROCESSING = 4;
    ORDER_STATUS_SHIPPED = 5;
    ORDER_STATUS_DELIVERED = 6;
    ORDER_STATUS_CANCELLED = 7;
}

message OrderItem {
    int64 id = 1;
    int64 order_id = 2;
    int64 product_id = 3;
    double quantity = 4;
    string unit = 5;
    double price = 6;
    double discount = 7;
    double total = 8;
    string comment = 9;
}

message CreateOrderRequest {
    int64 client_id = 1;
    int64 store_id = 2;
    repeated OrderItem items = 3;
    string comment = 4;
    google.protobuf.Timestamp delivery_date = 5;
}

message GetOrderRequest {
    int64 order_id = 1;
}

message UpdateOrderRequest {
    int64 order_id = 1;
    repeated OrderItem items = 2;
    string comment = 3;
    google.protobuf.Timestamp delivery_date = 4;
}

message DeleteOrderRequest {
    int64 order_id = 1;
}

message ListOrdersRequest {
    int32 page_size = 1;
    string page_token = 2;
    int64 client_id = 3;
    int64 store_id = 4;
    repeated OrderStatus statuses = 5;
    google.protobuf.Timestamp start_date = 6;
    google.protobuf.Timestamp end_date = 7;
}

message ListOrdersResponse {
    repeated Order orders = 1;
    string next_page_token = 2;
    int32 total_count = 3;
}

message AddOrderItemRequest {
    int64 order_id = 1;
    OrderItem item = 2;
}

message UpdateOrderItemRequest {
    int64 order_id = 1;
    OrderItem item = 2;
}

message DeleteOrderItemRequest {
    int64 order_id = 1;
    int64 item_id = 2;
}

message UpdateOrderStatusRequest {
    int64 order_id = 1;
    OrderStatus status = 2;
    string comment = 3;
}

message GetOrderStatsRequest {
    int64 user_id = 1;
    google.protobuf.Timestamp start_date = 2;
    google.protobuf.Timestamp end_date = 3;
}

message OrderStatsResponse {
    int32 total_orders = 1;
    double total_amount = 2;
    double average_order_amount = 3;
    map<string, int32> orders_by_status = 4;
    map<string, double> sales_by_product = 5;
    repeated TopClient top_clients = 6;
}

message TopClient {
    int64 client_id = 1;
    string client_name = 2;
    int32 orders_count = 3;
    double total_amount = 4;
}

message GetSalesReportRequest {
    google.protobuf.Timestamp start_date = 1;
    google.protobuf.Timestamp end_date = 2;
    string group_by = 3; // client, product, store, user
    repeated int64 client_ids = 4;
    repeated int64 store_ids = 5;
    repeated int64 product_ids = 6;
    repeated int64 user_ids = 7;
}

message SalesReportResponse {
    repeated SalesReportItem items = 1;
    SalesReportSummary summary = 2;
}

message SalesReportItem {
    string group_key = 1; // ID или название группировки
    int32 orders_count = 2;
    double total_amount = 3;
    double total_discount = 4;
    map<string, double> additional_metrics = 5;
}

message SalesReportSummary {
    int32 total_orders = 1;
    double total_amount = 2;
    double total_discount = 3;
    int32 total_clients = 4;
    map<string, double> summary_metrics = 5;
}

message OrderResponse {
    Order order = 1;
}

message OrderItemResponse {
    OrderItem item = 1;
}